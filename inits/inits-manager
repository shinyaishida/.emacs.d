#!/bin/bash
#
# Manage init loaders.
#

readonly me=${0##*/}
readonly bash_ls=$(which ls)

readonly emacs_home=${HOME}/.emacs.d
readonly inits_dir=${emacs_home}/inits
readonly inits_avail_dir=${inits_dir}.available
readonly default_conf=${inits_dir}/default.conf

cd ${emacs_home} &>/dev/null

readonly cmd_enable="enable"
readonly cmd_disable="disable"
readonly cmd_default="default"
readonly cmd_list="list"
readonly cmd_help="help"
readonly cmd_usage=$(cat <<EOF
    ${me} ${cmd_enable} <loader> <order>
    ${me} ${cmd_disable} <loader>
    ${me} ${cmd_default}
    ${me} ${cmd_list} [all]
    ${me} ${cmd_help}
EOF
         )

readonly ErrorCodeCommandError=3
readonly ErrorCodeLoaderNotAvailable=4
readonly ErrorCodeInvalidOrder=6
readonly ErrorCodeLoaderNotFound=7
readonly ErrorCodeLoaderNotEnabled=8

function __PrintError() {
  echo $* 1>&2
}

function __PrintUsageOf() {
  echo "usage:"
  echo "${cmd_usage}" | grep "$1"
}

function __PrintCommandError() {
  cat <<EOF
unknown command '${given_cmd}'
see help by '${me} ${cmd_help}'
EOF
  return ${ErrorCodeCommandError}
}

function __FormatLoaderName() {
  echo "${1%.el}.el"
}

function __FormatOrder() {
  local -r order="0$1"
  echo ${order: -2}
}

function __GetLinkTo() {
  ${bash_ls} ${inits_dir}/[0-9][0-9]_$1 2>/dev/null
}

function __EnableLoader() {
  local -r loader=$(__FormatLoaderName $1)
  [ ! -f "${inits_avail_dir}/${loader}" ] && {
    __PrintError "'$1' not available"
    return ${ErrorCodeLoaderNotAvailable}
  }
  local sym_link=$(${bash_ls} ${inits_dir}/[0-9][0-9]_${loader} 2>/dev/null)
  [ -L "${sym_link}" ] && {
    sym_link=${sym_link##*/}
  } || {
    sym_link=
  }
  local -r order=$(__FormatOrder $2)
  [[ "${order}" != [0-9][0-9] ]] && {
    __PrintError "invalid order '$2'; use exact two digits"
    return ${ErrorCodeInvalidOrder}
  }
  cd ${inits_dir} &>/dev/null
  [ "${sym_link}" ] && {
    mv ${sym_link} ${order}_${loader}
    echo "changed the order of ${loader} from ${sym_link%%_*} to ${order}"
  } || {
    ln -s ../${inits_avail_dir}/${loader} ${order}_${loader}
	echo "enabled ${loader} at ${order}"
  }
  cd .. &>/dev/null
}

function __DisableLoader() {
  local -r loader=$(__FormatLoaderName $1)
  [ ! -f "${inits_avail_dir}/${loader}" ] && {
    __PrintError "'$1' not available"
    return ${ErrorCodeLoaderNotFound}
  }
  local -r sym_link=$(__GetLinkTo ${loader})
  [ ! -f "${sym_link-}" ] && {
    __PrintError "'$1' not enabled"
    return ${ErrorCodeLoaderNotEnabled}
  }
  rm -f ${sym_link} 2>/dev/null
  echo "disabled ${loader}"
}

function __PrintLoader() {
  # keep the order of arguments to make the complement trick work
  printf "%s\t%s\n" ${2---} $1
}

function __ListEnabledLoaders() {
  local -r enables=($(${bash_ls} -1 ${inits_dir} | grep '.el$'))
  for loader in ${enables[@]}; do
	local name=$(echo ${loader} | sed "s:[0-9][0-9]_\(.*\)\.el:\1:1")
	local order=${loader%_*.el}
    __PrintLoader ${name} ${order}
  done
}

function __ListAvailableLoaders() {
  local -r availables=($(${bash_ls} -1 ${inits_avail_dir} | grep '.el$'))
  for loader in ${availables[@]}; do
	local name=$(echo ${loader} | sed "s:\(.*\)\.el:\1:1")
    local order=$(${bash_ls} ${inits_dir}/[0-9][0-9]_${loader} 2>/dev/null | \
                    sed "s:${inits_dir}/\([0-9][0-9]\)_.*:\1:1")
    __PrintLoader ${name} ${order}
  done
}

function __ResetLoaders() {
  echo 'reset current loaders'
  rm -f $(${bash_ls} ${inits_dir}/[0-9][0-9]_*)
}

function __SetDefaultLoaders() {
  for conf in $(cat ${default_conf} 2>&1); do
    __EnableLoader ${conf#*,} ${conf%,*}
  done
}

function __ListLoaders() {
  case $1 in
    all)
      __ListAvailableLoaders
      ;;
    *)
      __ListEnabledLoaders
      ;;
  esac
}

readonly given_cmd=$1
case "${given_cmd}" in
  ${cmd_enable})
    [ -z "$2" -o -z "$3" ] && \
      __PrintUsageOf ${given_command} || \
        __EnableLoader $2 $3
    ;;
  ${cmd_disable})
    [ -z "$2" ] && \
      __PrintUsageOf ${given_command} || \
        __DisableLoader $2
    ;;
  ${cmd_default})
    __ResetLoaders
    __SetDefaultLoaders
    ;;
  ${cmd_list})
    __ListLoaders $2
    ;;
  ${cmd_help})
    __PrintUsageOf ${me}
    ;;
  *)
    __PrintCommandError
    ;;
esac
exit $?
